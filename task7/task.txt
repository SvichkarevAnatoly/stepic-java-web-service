Задача:
Написать серверную часть клиент-серверного приложения на сокетах (не веб сокетах, а обычных сокетах).
Тестирующее приложение будет имитировать клиентские приложения.
Сервер должен слушать обращения клиентов на localhost:5050 и отправлять обратно все пришедшие от них сообщения.
То есть, если клиент присылает "Hello!" ему обратно должно быть отправлено "Hello!".

В процессе тестирования к серверу будут одновременно подключаться 10 клиентов. Каждый клиент будет отправлять по сообщению каждую миллисекунду в течение 5 секунд. Сервер должен отвечать всем клиентам одновременно. 
Время на обработку сообщений от всех клиентов не более 10 секунд. Если сервер отвечает дольше -- увеличьте число потоков для обработки сообщений.

Вы можете решить задачу либо через создание потока на каждый Socket, либо использую неблокирующие сокеты из NIO.

Инструкция подготовки к локальной проверке:
Соберите сервер со всеми зависимостями на библиотеки в server.jar
Для этого запустите Maven projects/<Project name>/Plugins/assembly/assembly:single
либо assembly.sh (assembly.bat)

Скопируйте server.jar на уровень src и запустите
java -jar server.jar

В логах консоли вы должны увидеть сообщения о старте сервера.

Инструкция подготовки к автоматической проверке:
Добавьте в лог сообщение "Server started". По появлению в логе этого сообщения тестирующая система пойдет, что к вашему серверу можно обращаться.
Соберите server.jar, содержащий все библиотеки.

Во время проверки тестовая система:
запустит ваш сервер,
подождет пока "Server started",
создаст 10 сокетов в 10 потоках и каждым из них обратиться к серверу на localhost:5050
Каждый клиент будет отправлять одно сообщение в миллисекунду на сервер, и ждать пока оно вернется обратно.
После отправки 5000 сообщений клиент отправит на сервер "Bue.", по этому сигналу сервер должен разорвать соединение с сокетом.
После того как все клиенты отработают, тестирующая система оценит время, которое ушло на проверку. Общее время работы должно быть менее 10 секунд.
